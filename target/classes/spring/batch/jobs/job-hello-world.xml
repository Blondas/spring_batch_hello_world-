<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xsi:schemaLocation="http://www.springframework.org/schema/batch
       http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       ">

    <import resource="../config/context.xml" />
    <import resource="../config/database.xml" />

    <bean id="report" class="solutions.mrwoolf.model.Report" scope="prototype" />

    <!-- reader: mapuje csv na obiekty (klasa Report) -->
    <bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="classpath:cvs/input/report.csv" />
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="id,sales,qty,staffName,date" />
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="solutions.mrwoolf.ReportFieldSetMapper" />
                </property>
            </bean>
        </property>
    </bean>

    <!-- przerabia report z wejscia i zwraca report na wyjsciu-->
    <bean id="itemProcessor" class="solutions.mrwoolf.CustomItemProcessor" />

    <!-- tworzy wyjsciowy plik xml uzywajac do tegoa marshallera/przetwarzacza: klasa Report-->
    <bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
        <!--<property name="resource" value="file:xml/outputs/report.xml" />-->
        <property name="resource" value="file:xml/outputs/report.xml" />
        <property name="marshaller" ref="reportMarshaller" />
        <property name="rootTagName" value="report" />
    </bean>


    <bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>solutions.mrwoolf.model.Report</value>
            </list>
        </property>
    </bean>


    <batch:job id="helloWorldJob">
        <batch:step id="step1">
            <batch:tasklet>
                <batch:chunk reader="cvsFileItemReader" processor="itemProcessor" writer="xmlItemWriter"
                             commit-interval="10">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>
</beans>